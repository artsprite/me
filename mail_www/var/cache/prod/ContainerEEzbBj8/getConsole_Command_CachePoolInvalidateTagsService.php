<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConsole_Command_CachePoolInvalidateTagsService extends AppKernelProdContainer
{
    /*
     * Gets the private 'console.command.cache_pool_invalidate_tags' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->privates['console.command.cache_pool_invalidate_tags'] = $instance = new \Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'api_rate_limiter_cache' => ['privates', '.api_rate_limiter_cache.taggable', 'get_ApiRateLimiterCache_TaggableService', true],
            'cache.app' => ['privates', 'cache.app.taggable', 'getCache_App_TaggableService', true],
            'doctrine_result_cache' => ['privates', '.doctrine_result_cache.taggable', 'get_DoctrineResultCache_TaggableService', true],
        ], [
            'api_rate_limiter_cache' => 'Symfony\\Component\\Cache\\Adapter\\TagAwareAdapter',
            'cache.app' => 'Symfony\\Component\\Cache\\Adapter\\TagAwareAdapter',
            'doctrine_result_cache' => 'Symfony\\Component\\Cache\\Adapter\\TagAwareAdapter',
        ]));

        $instance->setName('cache:pool:invalidate-tags');
        $instance->setDescription('Invalidate cache tags for all or a specific pool');

        return $instance;
    }
}
