<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFormSubscriber5Service extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\FormBundle\EventListener\FormSubscriber' shared autowired service.
     *
     * @return \Mautic\FormBundle\EventListener\FormSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\CoreBundle\\Model\\AuditLogModel'] ?? self::getAuditLogModelService($container));

        if (isset($container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'])) {
            return $container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'];
        }
        $b = ($container->services['Mautic\\EmailBundle\\Helper\\MailHelper'] ?? self::getMailHelperService($container));

        if (isset($container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'])) {
            return $container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'];
        }
        $c = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'])) {
            return $container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'];
        }

        return $container->services['Mautic\\FormBundle\\EventListener\\FormSubscriber'] = new \Mautic\FormBundle\EventListener\FormSubscriber(($container->services['mautic.helper.ip_lookup'] ?? self::getMautic_Helper_IpLookupService($container)), $a, $b, ($container->services['translator'] ?? self::getTranslator2Service($container)), $c, ($container->services['Mautic\\CoreBundle\\Helper\\LanguageHelper'] ?? $container->load('getLanguageHelperService')));
    }
}
