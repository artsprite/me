<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDashboardSubscriber3Service extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\CoreBundle\EventListener\DashboardSubscriber' shared autowired service.
     *
     * @return \Mautic\CoreBundle\EventListener\DashboardSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\CoreBundle\\Model\\AuditLogModel'] ?? self::getAuditLogModelService($container));

        if (isset($container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'])) {
            return $container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'];
        }
        $b = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'])) {
            return $container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'];
        }
        $c = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'])) {
            return $container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'];
        }
        $d = ($container->services['Mautic\\CoreBundle\\Factory\\ModelFactory'] ?? self::getModelFactoryService($container));

        if (isset($container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'])) {
            return $container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'];
        }

        return $container->services['Mautic\\CoreBundle\\EventListener\\DashboardSubscriber'] = new \Mautic\CoreBundle\EventListener\DashboardSubscriber($a, ($container->services['translator'] ?? self::getTranslator2Service($container)), $b, ($container->services['mautic.security'] ?? self::getMautic_SecurityService($container)), $c, $d);
    }
}
