<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Authenticator_MainService extends AppKernelProdContainer
{
    /*
     * Gets the private 'security.firewall.authenticator.main' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['security.authenticator.oauth2.main'] ?? $container->load('getSecurity_Authenticator_Oauth2_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $b = ($container->services['security.authenticator.mautic_sso.main'] ?? $container->load('getSecurity_Authenticator_MauticSso_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $c = ($container->privates['security.authenticator.form_login.main'] ?? $container->load('getSecurity_Authenticator_FormLogin_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $d = ($container->privates['security.authenticator.lightsaml_sp.main'] ?? $container->load('getSecurity_Authenticator_LightsamlSp_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $e = ($container->privates['security.authenticator.remember_me.main'] ?? $container->load('getSecurity_Authenticator_RememberMe_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }
        $f = ($container->privates['security.event_dispatcher.main'] ?? $container->load('getSecurity_EventDispatcher_MainService'));

        if (isset($container->privates['security.firewall.authenticator.main'])) {
            return $container->privates['security.firewall.authenticator.main'];
        }

        return $container->privates['security.firewall.authenticator.main'] = new \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener(new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([$a, $b, $c, $d, $e], ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $f, 'main', ($container->privates['monolog.logger.security'] ?? self::getMonolog_Logger_SecurityService($container)), true, true, []));
    }
}
