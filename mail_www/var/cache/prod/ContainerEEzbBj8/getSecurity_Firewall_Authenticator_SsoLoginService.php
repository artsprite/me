<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Firewall_Authenticator_SsoLoginService extends AppKernelProdContainer
{
    /*
     * Gets the private 'security.firewall.authenticator.sso_login' shared service.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['security.authentication.provider.mautic.sso_login'] ?? $container->load('getSecurity_Authentication_Provider_Mautic_SsoLoginService'));

        if (isset($container->privates['security.firewall.authenticator.sso_login'])) {
            return $container->privates['security.firewall.authenticator.sso_login'];
        }
        $b = ($container->privates['security.event_dispatcher.sso_login'] ?? $container->load('getSecurity_EventDispatcher_SsoLoginService'));

        if (isset($container->privates['security.firewall.authenticator.sso_login'])) {
            return $container->privates['security.firewall.authenticator.sso_login'];
        }

        return $container->privates['security.firewall.authenticator.sso_login'] = new \Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener(new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([$a], ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $b, 'sso_login', ($container->privates['monolog.logger.security'] ?? self::getMonolog_Logger_SecurityService($container)), true, true, []));
    }
}
