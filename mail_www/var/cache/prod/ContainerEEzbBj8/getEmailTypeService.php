<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEmailTypeService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\EmailBundle\Form\Type\EmailType' shared autowired service.
     *
     * @return \Mautic\EmailBundle\Form\Type\EmailType
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'])) {
            return $container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'];
        }
        $b = ($container->services['Mautic\\StageBundle\\Model\\StageModel'] ?? $container->load('getStageModelService'));

        if (isset($container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'])) {
            return $container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'];
        }
        $c = ($container->services['mautic.helper.theme'] ?? self::getMautic_Helper_ThemeService($container));

        if (isset($container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'])) {
            return $container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'];
        }

        return $container->services['Mautic\\EmailBundle\\Form\\Type\\EmailType'] = new \Mautic\EmailBundle\Form\Type\EmailType(($container->services['translator'] ?? self::getTranslator2Service($container)), $a, $b, ($container->services['mautic.helper.core_parameters'] ??= new \Mautic\CoreBundle\Helper\CoreParametersHelper($container)), $c, ($container->services['Mautic\\EmailBundle\\Helper\\EmailConfig'] ?? $container->load('getEmailConfigService')));
    }
}
