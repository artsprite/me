<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSearchSubscriber10Service extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\LeadBundle\EventListener\SearchSubscriber' shared autowired service.
     *
     * @return \Mautic\LeadBundle\EventListener\SearchSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\LeadBundle\\Model\\LeadModel'] ?? self::getLeadModelService($container));

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'];
        }
        $b = ($container->services['Mautic\\LeadBundle\\Model\\CompanyModel'] ?? self::getCompanyModelService($container));

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'];
        }
        $c = ($container->services['Mautic\\LeadBundle\\Model\\ListModel'] ?? self::getListModelService($container));

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'];
        }
        $d = ($container->privates['twig'] ?? self::getTwigService($container));

        if (isset($container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'])) {
            return $container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'];
        }

        return $container->services['Mautic\\LeadBundle\\EventListener\\SearchSubscriber'] = new \Mautic\LeadBundle\EventListener\SearchSubscriber($a, $b, $c, ($container->services['Mautic\\EmailBundle\\Entity\\EmailRepository'] ?? $container->load('getEmailRepositoryService')), ($container->services['translator'] ?? self::getTranslator2Service($container)), ($container->services['mautic.security'] ?? self::getMautic_SecurityService($container)), $d, ($container->services['Mautic\\CoreBundle\\Service\\GlobalSearch'] ?? $container->load('getGlobalSearchService')));
    }
}
