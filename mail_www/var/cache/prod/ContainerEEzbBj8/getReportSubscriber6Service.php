<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getReportSubscriber6Service extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\EmailBundle\EventListener\ReportSubscriber' shared autowired service.
     *
     * @return \Mautic\EmailBundle\EventListener\ReportSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container));

        if (isset($container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'])) {
            return $container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'];
        }
        $b = ($container->services['mautic.generated.columns.provider'] ?? self::getMautic_Generated_Columns_ProviderService($container));

        if (isset($container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'])) {
            return $container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'];
        }
        $c = ($container->services['mautic.lead.reportbundle.fields_builder'] ?? $container->load('getMautic_Lead_Reportbundle_FieldsBuilderService'));

        if (isset($container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'])) {
            return $container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'];
        }

        return $container->services['Mautic\\EmailBundle\\EventListener\\ReportSubscriber'] = new \Mautic\EmailBundle\EventListener\ReportSubscriber($a, ($container->services['Mautic\\LeadBundle\\Model\\CompanyReportData'] ?? $container->load('getCompanyReportDataService')), ($container->services['Mautic\\EmailBundle\\Entity\\StatRepository'] ?? self::getStatRepositoryService($container)), ($container->services['Mautic\\EmailBundle\\Entity\\EmailRepository'] ?? $container->load('getEmailRepositoryService')), $b, $c);
    }
}
