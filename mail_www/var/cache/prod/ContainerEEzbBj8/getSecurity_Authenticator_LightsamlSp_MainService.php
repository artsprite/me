<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_LightsamlSp_MainService extends AppKernelProdContainer
{
    /*
     * Gets the private 'security.authenticator.lightsaml_sp.main' shared service.
     *
     * @return \LightSaml\SpBundle\Security\Authenticator\LightSamlSpAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['ligthsaml.profile.acs'] ?? $container->load('getLigthsaml_Profile_AcsService'));

        if (isset($container->privates['security.authenticator.lightsaml_sp.main'])) {
            return $container->privates['security.authenticator.lightsaml_sp.main'];
        }
        $b = ($container->services['mautic.user.provider'] ?? self::getMautic_User_ProviderService($container));

        if (isset($container->privates['security.authenticator.lightsaml_sp.main'])) {
            return $container->privates['security.authenticator.lightsaml_sp.main'];
        }
        $c = ($container->services['mautic.security.saml.user_creator'] ?? $container->load('getMautic_Security_Saml_UserCreatorService'));

        if (isset($container->privates['security.authenticator.lightsaml_sp.main'])) {
            return $container->privates['security.authenticator.lightsaml_sp.main'];
        }
        $d = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->privates['security.authenticator.lightsaml_sp.main'])) {
            return $container->privates['security.authenticator.lightsaml_sp.main'];
        }

        return $container->privates['security.authenticator.lightsaml_sp.main'] = new \LightSaml\SpBundle\Security\Authenticator\LightSamlSpAuthenticator('main', ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService')), $a, $b, ($container->services['mautic.security.saml.username_mapper'] ?? $container->load('getMautic_Security_Saml_UsernameMapperService')), $c, new \LightSaml\SpBundle\Security\User\SimpleAttributeMapper(), new \LightSaml\SpBundle\Security\Authentication\Token\SamlSpTokenFactory(), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler(new \Mautic\UserBundle\Security\Authentication\AuthenticationHandler($d), ['login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false], 'main'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler(new \Mautic\UserBundle\Security\Authentication\AuthenticationHandler($d), ['login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']), ['provider' => 'user_provider', 'success_handler' => 'mautic.security.authentication_handler', 'failure_handler' => 'mautic.security.authentication_handler', 'user_creator' => 'mautic.security.saml.user_creator', 'username_mapper' => 'mautic.security.saml.username_mapper', 'login_path' => $container->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'check_path' => $container->getEnv('MAUTIC_SAML_LOGIN_CHECK_PATH'), 'remember_me' => true, 'use_forward' => false, 'require_previous_session' => false, 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false, 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path', 'attribute_mapper' => 'lightsaml_sp.attribute_mapper.simple', 'token_factory' => 'lightsaml_sp.token_factory']);
    }
}
