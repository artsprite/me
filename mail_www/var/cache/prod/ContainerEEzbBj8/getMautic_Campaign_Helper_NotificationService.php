<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Campaign_Helper_NotificationService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.campaign.helper.notification' shared service.
     *
     * @return \Mautic\CampaignBundle\Executioner\Helper\NotificationHelper
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\UserBundle\\Model\\UserModel'] ?? self::getUserModelService($container));

        if (isset($container->services['mautic.campaign.helper.notification'])) {
            return $container->services['mautic.campaign.helper.notification'];
        }
        $b = ($container->services['Mautic\\CoreBundle\\Model\\NotificationModel'] ?? self::getNotificationModelService($container));

        if (isset($container->services['mautic.campaign.helper.notification'])) {
            return $container->services['mautic.campaign.helper.notification'];
        }
        $c = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->services['mautic.campaign.helper.notification'])) {
            return $container->services['mautic.campaign.helper.notification'];
        }

        return $container->services['mautic.campaign.helper.notification'] = new \Mautic\CampaignBundle\Executioner\Helper\NotificationHelper($a, $b, ($container->services['translator'] ?? self::getTranslator2Service($container)), $c, ($container->services['mautic.helper.core_parameters'] ??= new \Mautic\CoreBundle\Helper\CoreParametersHelper($container)));
    }
}
