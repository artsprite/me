<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Ea265LxService extends AppKernelProdContainer
{
    /*
     * Gets the private '.service_locator.Ea265Lx' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Ea265Lx'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'contactRequestHelper' => ['services', 'Mautic\\LeadBundle\\Helper\\ContactRequestHelper', 'getContactRequestHelperService', false],
            'ipLookupHelper' => ['services', 'mautic.helper.ip_lookup', 'getMautic_Helper_IpLookupService', false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'primaryCompanyHelper' => ['services', 'mautic.lead.helper.primary_company', 'getMautic_Lead_Helper_PrimaryCompanyService', false],
        ], [
            'contactRequestHelper' => 'Mautic\\LeadBundle\\Helper\\ContactRequestHelper',
            'ipLookupHelper' => '?',
            'logger' => '?',
            'primaryCompanyHelper' => '?',
        ]);
    }
}
