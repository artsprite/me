<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Integration_ConstantcontactService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.integration.constantcontact' shared service.
     *
     * @return \MauticPlugin\MauticEmailMarketingBundle\Integration\ConstantContactIntegration
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['mautic.integration.constantcontact'] = new \MauticPlugin\MauticEmailMarketingBundle\Integration\ConstantContactIntegration(($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)), ($container->services['mautic.helper.cache_storage'] ?? self::getMautic_Helper_CacheStorageService($container)), ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->services['router'] ?? self::getRouterService($container)), ($container->services['translator'] ?? self::getTranslator2Service($container)), ($container->services['monolog.logger.mautic'] ?? self::getMonolog_Logger_MauticService($container)), ($container->services['mautic.helper.encryption'] ?? self::getMautic_Helper_EncryptionService($container)), ($container->services['Mautic\\LeadBundle\\Model\\LeadModel'] ?? self::getLeadModelService($container)), ($container->services['Mautic\\LeadBundle\\Model\\CompanyModel'] ?? self::getCompanyModelService($container)), ($container->services['mautic.helper.paths'] ?? self::getMautic_Helper_PathsService($container)), ($container->services['Mautic\\CoreBundle\\Model\\NotificationModel'] ?? self::getNotificationModelService($container)), ($container->services['Mautic\\LeadBundle\\Model\\FieldModel'] ?? self::getFieldModel2Service($container)), ($container->services['Mautic\\PluginBundle\\Model\\IntegrationEntityModel'] ?? $container->load('getIntegrationEntityModelService')), ($container->services['Mautic\\LeadBundle\\Model\\DoNotContact'] ?? self::getDoNotContactService($container)), ($container->services['mautic.lead.field.fields_with_unique_identifier'] ?? self::getMautic_Lead_Field_FieldsWithUniqueIdentifierService($container)));
    }
}
