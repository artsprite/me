<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDynamicContentSubscriberService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber' shared autowired service.
     *
     * @return \Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\PageBundle\\Model\\TrackableModel'] ?? self::getTrackableModelService($container));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $b = ($container->services['mautic.form.helper.token'] ?? $container->load('getMautic_Form_Helper_TokenService'));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $c = ($container->services['mautic.focus.helper.token'] ?? $container->load('getMautic_Focus_Helper_TokenService'));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $d = ($container->services['Mautic\\CoreBundle\\Model\\AuditLogModel'] ?? self::getAuditLogModelService($container));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $e = ($container->services['mautic.helper.dynamicContent'] ?? $container->load('getMautic_Helper_DynamicContentService'));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $f = ($container->services['Mautic\\DynamicContentBundle\\Model\\DynamicContentModel'] ?? $container->load('getDynamicContentModelService'));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $g = ($container->services['Mautic\\LeadBundle\\Tracker\\ContactTracker'] ?? self::getContactTrackerService($container));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }
        $h = ($container->services['Mautic\\LeadBundle\\Model\\CompanyModel'] ?? self::getCompanyModelService($container));

        if (isset($container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'])) {
            return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'];
        }

        return $container->services['Mautic\\DynamicContentBundle\\EventListener\\DynamicContentSubscriber'] = new \Mautic\DynamicContentBundle\EventListener\DynamicContentSubscriber($a, ($container->services['mautic.page.helper.token'] ?? self::getMautic_Page_Helper_TokenService($container)), ($container->services['Mautic\\AssetBundle\\Helper\\TokenHelper'] ?? self::getTokenHelperService($container)), $b, $c, $d, $e, $f, ($container->services['mautic.security'] ?? self::getMautic_SecurityService($container)), $g, $h);
    }
}
