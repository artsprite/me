<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFieldHelperService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\IntegrationsBundle\Sync\SyncDataExchange\Helper\FieldHelper' shared autowired service.
     *
     * @return \Mautic\IntegrationsBundle\Sync\SyncDataExchange\Helper\FieldHelper
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\LeadBundle\\Model\\FieldModel'] ?? self::getFieldModel2Service($container));

        if (isset($container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'])) {
            return $container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'];
        }
        $b = ($container->services['mautic.channel.helper.channel_list'] ?? self::getMautic_Channel_Helper_ChannelListService($container));

        if (isset($container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'])) {
            return $container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'];
        }
        $c = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'])) {
            return $container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'];
        }
        $d = ($container->services['mautic.integrations.internal.object_provider'] ?? $container->load('getMautic_Integrations_Internal_ObjectProviderService'));

        if (isset($container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'])) {
            return $container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'];
        }

        return $container->services['Mautic\\IntegrationsBundle\\Sync\\SyncDataExchange\\Helper\\FieldHelper'] = new \Mautic\IntegrationsBundle\Sync\SyncDataExchange\Helper\FieldHelper($a, ($container->services['mautic.lead.field.fields_with_unique_identifier'] ?? self::getMautic_Lead_Field_FieldsWithUniqueIdentifierService($container)), ($container->services['mautic.integrations.helper.variable_expresser'] ??= new \Mautic\IntegrationsBundle\Sync\VariableExpresser\VariableExpresserHelper()), $b, ($container->services['translator'] ?? self::getTranslator2Service($container)), $c, $d);
    }
}
