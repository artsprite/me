<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPluginDatabaseService extends AppKernelProdContainer
{
    /*
     * Gets the public 'Mautic\PluginBundle\Bundle\PluginDatabase' shared autowired service.
     *
     * @return \Mautic\PluginBundle\Bundle\PluginDatabase
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        if (isset($container->services['Mautic\\PluginBundle\\Bundle\\PluginDatabase'])) {
            return $container->services['Mautic\\PluginBundle\\Bundle\\PluginDatabase'];
        }
        $b = ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container));

        if (isset($container->services['Mautic\\PluginBundle\\Bundle\\PluginDatabase'])) {
            return $container->services['Mautic\\PluginBundle\\Bundle\\PluginDatabase'];
        }

        return $container->services['Mautic\\PluginBundle\\Bundle\\PluginDatabase'] = new \Mautic\PluginBundle\Bundle\PluginDatabase($a, $b, $container->getEnv('MAUTIC_TABLE_PREFIX'));
    }
}
