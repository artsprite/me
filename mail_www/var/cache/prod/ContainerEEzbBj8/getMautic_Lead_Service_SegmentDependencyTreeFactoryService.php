<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Lead_Service_SegmentDependencyTreeFactoryService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.lead.service.segment_dependency_tree_factory' shared service.
     *
     * @return \Mautic\LeadBundle\Services\SegmentDependencyTreeFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['Mautic\\LeadBundle\\Model\\ListModel'] ?? self::getListModelService($container));

        if (isset($container->services['mautic.lead.service.segment_dependency_tree_factory'])) {
            return $container->services['mautic.lead.service.segment_dependency_tree_factory'];
        }
        $b = ($container->services['router'] ?? self::getRouterService($container));

        if (isset($container->services['mautic.lead.service.segment_dependency_tree_factory'])) {
            return $container->services['mautic.lead.service.segment_dependency_tree_factory'];
        }

        return $container->services['mautic.lead.service.segment_dependency_tree_factory'] = new \Mautic\LeadBundle\Services\SegmentDependencyTreeFactory($a, $b);
    }
}
