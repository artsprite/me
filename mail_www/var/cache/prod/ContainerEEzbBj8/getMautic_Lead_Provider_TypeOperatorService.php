<?php

namespace ContainerEEzbBj8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMautic_Lead_Provider_TypeOperatorService extends AppKernelProdContainer
{
    /*
     * Gets the public 'mautic.lead.provider.typeOperator' shared service.
     *
     * @return \Mautic\LeadBundle\Provider\TypeOperatorProvider
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->services['mautic.lead.provider.typeOperator'])) {
            return $container->services['mautic.lead.provider.typeOperator'];
        }
        $b = ($container->services['mautic.lead.provider.fillterOperator'] ?? self::getMautic_Lead_Provider_FillterOperatorService($container));

        if (isset($container->services['mautic.lead.provider.typeOperator'])) {
            return $container->services['mautic.lead.provider.typeOperator'];
        }

        return $container->services['mautic.lead.provider.typeOperator'] = new \Mautic\LeadBundle\Provider\TypeOperatorProvider($a, $b);
    }
}
